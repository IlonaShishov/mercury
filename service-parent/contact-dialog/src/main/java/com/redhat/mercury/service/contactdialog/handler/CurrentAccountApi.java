/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.redhat.mercury.service.contactdialog.handler;

import com.redhat.mercury.service.contactdialog.model.InlineObject;
import com.redhat.mercury.service.contactdialog.model.InlineObject1;
import com.redhat.mercury.service.contactdialog.model.InlineObject10;
import com.redhat.mercury.service.contactdialog.model.InlineObject11;
import com.redhat.mercury.service.contactdialog.model.InlineObject12;
import com.redhat.mercury.service.contactdialog.model.InlineObject13;
import com.redhat.mercury.service.contactdialog.model.InlineObject14;
import com.redhat.mercury.service.contactdialog.model.InlineObject15;
import com.redhat.mercury.service.contactdialog.model.InlineObject16;
import com.redhat.mercury.service.contactdialog.model.InlineObject17;
import com.redhat.mercury.service.contactdialog.model.InlineObject18;
import com.redhat.mercury.service.contactdialog.model.InlineObject19;
import com.redhat.mercury.service.contactdialog.model.InlineObject2;
import com.redhat.mercury.service.contactdialog.model.InlineObject20;
import com.redhat.mercury.service.contactdialog.model.InlineObject21;
import com.redhat.mercury.service.contactdialog.model.InlineObject22;
import com.redhat.mercury.service.contactdialog.model.InlineObject23;
import com.redhat.mercury.service.contactdialog.model.InlineObject3;
import com.redhat.mercury.service.contactdialog.model.InlineObject4;
import com.redhat.mercury.service.contactdialog.model.InlineObject5;
import com.redhat.mercury.service.contactdialog.model.InlineObject6;
import com.redhat.mercury.service.contactdialog.model.InlineObject7;
import com.redhat.mercury.service.contactdialog.model.InlineObject8;
import com.redhat.mercury.service.contactdialog.model.InlineObject9;
import com.redhat.mercury.service.contactdialog.model.InlineResponse200;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2001;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20010;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20011;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20012;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20013;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20014;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20015;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20016;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20017;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20018;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20019;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2002;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20020;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20021;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20022;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20023;
import com.redhat.mercury.service.contactdialog.model.InlineResponse20024;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2003;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2004;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2005;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2006;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2007;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2008;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2009;
import com.redhat.mercury.service.contactdialog.model.InlineResponse201;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2011;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2012;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2013;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2014;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2015;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2016;
import com.redhat.mercury.service.contactdialog.model.InlineResponse2017;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2020-05-08T13:28:59.780-04:00[America/New_York]")

@Validated
@Api(value = "current-account", description = "the current-account API")
public interface CurrentAccountApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /current-account/activation : Activate  a SDCurrentAccount servicing session
     * Activate  a  SDCurrentAccount servicing session
     *
     * @param body  (required)
     * @return Successful Service Activation (status code 201)
     */
    @ApiOperation(value = "Activate  a SDCurrentAccount servicing session", nickname = "activateSDCurrentAccount", notes = "Activate  a  SDCurrentAccount servicing session", response = InlineResponse201.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "activate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful Service Activation", response = InlineResponse201.class) })
    @RequestMapping(value = "/current-account/activation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse201> activateSDCurrentAccount(@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceDomainServicingSessionStatus\" : \"serviceDomainServicingSessionStatus\", \"serviceDomainServicingSessionReference\" : \"SSSR783215\", \"serviceDomainServicingSessionRecord\" : \"{}\", \"serviceDomainActivationActionTaskReference\" : \"SAATR758836\", \"serviceDomainActivationActionTaskRecord\" : \"{}\", \"serviceDomainServiceConfigurationRecord\" : { \"serviceDomainServiceStatus\" : \"serviceDomainServiceStatus\", \"serviceDomainServiceConfigurationSettingDescription\" : \"serviceDomainServiceConfigurationSettingDescription\", \"serviceDomainServiceConfigurationSetup\" : { \"serviceDomainServiceConfigurationParameter\" : \"serviceDomainServiceConfigurationParameter\" }, \"serviceDomainServiceAgreement\" : { \"serviceDomainServiceAgreementReference\" : \"791202\", \"serviceDomainServiceAgreementTermsandConditions\" : \"serviceDomainServiceAgreementTermsandConditions\", \"serviceDomainServiceUserReference\" : \"767210\" }, \"serviceDomainServiceConfigurationSettingReference\" : \"700761\", \"serviceDomainServiceSubscription\" : { \"serviceDomainServiceSubscriberAccessProfile\" : \"serviceDomainServiceSubscriberAccessProfile\", \"serviceDomainServiceSubscriberReference\" : \"769192\" } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/configuration : Update an active SDCurrentAccount session configuration
     * Update an active SDCurrentAccount session configuration
     *
     * @param sdReferenceId SDCurrentAccount Servicing Session Reference (required)
     * @param body  (required)
     * @return Successful Service Configuration (status code 200)
     */
    @ApiOperation(value = "Update an active SDCurrentAccount session configuration", nickname = "configureSDCurrentAccount", notes = "Update an active SDCurrentAccount session configuration", response = InlineResponse200.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "configure", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Service Configuration", response = InlineResponse200.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/configuration",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse200> configureSDCurrentAccount(@ApiParam(value = "SDCurrentAccount Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject1 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceDomainServicingSessionStatus\" : \"serviceDomainServicingSessionStatus\", \"serviceDomainConfigurationActionTaskRecord\" : \"{}\", \"serviceDomainConfigurationActionTaskReference\" : \"SCATR765419\", \"serviceDomainServiceConfigurationRecord\" : { \"serviceDomainServiceStatus\" : \"serviceDomainServiceStatus\", \"serviceDomainServiceConfigurationSettingDescription\" : \"serviceDomainServiceConfigurationSettingDescription\", \"serviceDomainServiceConfigurationSetup\" : { \"serviceDomainServiceConfigurationParameter\" : \"serviceDomainServiceConfigurationParameter\" }, \"serviceDomainServiceAgreement\" : { \"serviceDomainServiceAgreementReference\" : \"721156\", \"serviceDomainServiceAgreementTermsandConditions\" : \"serviceDomainServiceAgreementTermsandConditions\", \"serviceDomainServiceUserReference\" : \"733696\" }, \"serviceDomainServiceSubscription\" : { \"serviceDomainServiceSubscriberAccessProfile\" : \"serviceDomainServiceSubscriberAccessProfile\", \"serviceDomainServiceSubscriberReference\" : \"756221\" } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/control : Request specific processing (e.g. suspend, skip, terminate)
     * Control the processing of an active current account (change processing status)
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful control of Current Account Fulfillment Arrangement Instance (status code 200)
     */
    @ApiOperation(value = "Request specific processing (e.g. suspend, skip, terminate)", nickname = "controlCurrentAccountFulfillmentArrangementUpdate", notes = "Control the processing of an active current account (change processing status)", response = InlineResponse2004.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "control", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful control of Current Account Fulfillment Arrangement Instance", response = InlineResponse2004.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/control",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse2004> controlCurrentAccountFulfillmentArrangementUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject5 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"currentAccountFulfillmentArrangementControlActionTaskReference\" : \"CAFACATR769674\", \"currentAccountFulfillmentArrangementControlActionTaskRecord\" : \"{}\", \"currentAccountFulfillmentArrangementControlActionResponse\" : \"currentAccountFulfillmentArrangementControlActionResponse\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/{bq-reference-id}/exchange : Handle an external exchange (e.g. accept, reject, verify)
     * Exchange (i.e. confirm, reject) details of an account lien
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId AccountLien Instance Reference (required)
     * @param body  (required)
     * @return Successful exchange of AccountLien Instance Record (status code 200)
     */
    @ApiOperation(value = "Handle an external exchange (e.g. accept, reject, verify)", nickname = "exchangeCurrentAccountFulfillmentArrangementAccountLienUpdate", notes = "Exchange (i.e. confirm, reject) details of an account lien", response = InlineResponse20010.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "exchange", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful exchange of AccountLien Instance Record", response = InlineResponse20010.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/{bq-reference-id}/exchange",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20010> exchangeCurrentAccountFulfillmentArrangementAccountLienUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "AccountLien Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject10 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountLienExchangeActionTaskReference\" : \"ALEATR720629\", \"accountLienInstanceStatus\" : \"accountLienInstanceStatus\", \"accountLienExchangeActionResponse\" : \"accountLienExchangeActionResponse\", \"accountLienExchangeActionTaskRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/exchange : Handle an external exchange (e.g. accept, reject, verify)
     * Verify/approve a scheduled repeating payment
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId Payments Instance Reference (required)
     * @param body  (required)
     * @return Successful exchange of Payments Instance Record (status code 200)
     */
    @ApiOperation(value = "Handle an external exchange (e.g. accept, reject, verify)", nickname = "exchangeCurrentAccountFulfillmentArrangementPaymentsUpdate", notes = "Verify/approve a scheduled repeating payment", response = InlineResponse20019.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "exchange", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful exchange of Payments Instance Record", response = InlineResponse20019.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/exchange",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20019> exchangeCurrentAccountFulfillmentArrangementPaymentsUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Payments Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject19 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"paymentsExchangeActionResponse\" : \"paymentsExchangeActionResponse\", \"paymentsInstanceStatus\" : \"paymentsInstanceStatus\", \"paymentsExchangeActionTaskReference\" : \"PEATR733989\", \"paymentsExchangeActionTaskRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/{bq-reference-id}/execution : Invoke an automated execute action against the AccountSweep instance
     * Trigger an account sweep transaction
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId AccountSweep Instance Reference (required)
     * @param body  (required)
     * @return Successful execution of AccountSweep Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke an automated execute action against the AccountSweep instance", nickname = "executeCurrentAccountFulfillmentArrangementAccountSweepUpdate", notes = "Trigger an account sweep transaction", response = InlineResponse20013.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "execute", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful execution of AccountSweep Instance Record", response = InlineResponse20013.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/{bq-reference-id}/execution",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20013> executeCurrentAccountFulfillmentArrangementAccountSweepUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "AccountSweep Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject13 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"executeResponseRecord\" : \"{}\", \"accountSweepExecuteActionTaskRecord\" : \"{}\", \"accountSweepExecuteRecordReference\" : \"ASERR751900\", \"accountSweepExecuteActionTaskReference\" : \"ASEATR709683\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/{bq-reference-id}/execution : Invoke an automated execute action against the DepositsAndWithdrawals instance
     * Execute a deposit or withdrawal transaction
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId DepositsAndWithdrawals Instance Reference (required)
     * @param body  (required)
     * @return Successful execution of DepositsAndWithdrawals Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke an automated execute action against the DepositsAndWithdrawals instance", nickname = "executeCurrentAccountFulfillmentArrangementDepositsAndWithdrawalsUpdate", notes = "Execute a deposit or withdrawal transaction", response = InlineResponse20016.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "execute", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful execution of DepositsAndWithdrawals Instance Record", response = InlineResponse20016.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/{bq-reference-id}/execution",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20016> executeCurrentAccountFulfillmentArrangementDepositsAndWithdrawalsUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "DepositsAndWithdrawals Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject16 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"depositsAndWithdrawalsExecuteRecordReference\" : \"DAWERR766990\", \"executeResponseRecord\" : \"{}\", \"depositsAndWithdrawalsInstanceRecord\" : { \"withdrawalTransaction\" : { \"withdrawalTransactionDate\" : \"09-22-2018\" }, \"depositTransaction\" : { \"depositTransactionDate\" : \"09-22-2018\" } }, \"depositsAndWithdrawalsExecuteActionTaskRecord\" : \"{}\", \"depositsAndWithdrawalsExecuteActionTaskReference\" : \"DAWEATR710009\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/execution : Invoke an automated execute action against the Payments instance
     * Trigger a payment for a repeating payment set up
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId Payments Instance Reference (required)
     * @param body  (required)
     * @return Successful execution of Payments Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke an automated execute action against the Payments instance", nickname = "executeCurrentAccountFulfillmentArrangementPaymentsUpdate", notes = "Trigger a payment for a repeating payment set up", response = InlineResponse20020.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "execute", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful execution of Payments Instance Record", response = InlineResponse20020.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/execution",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20020> executeCurrentAccountFulfillmentArrangementPaymentsUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Payments Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject20 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"paymentsExecuteActionTaskRecord\" : \"{}\", \"executeResponseRecord\" : \"{}\", \"paymentsExecuteActionTaskReference\" : \"PEATR737876\", \"paymentsExecuteRecordReference\" : \"PERR72.0.0\", \"paymentsInstanceRecord\" : { \"paymentTransaction\" : { \"paymentTransactionStatus\" : \"paymentTransactionStatus\", \"paymentTransactionDate\" : \"09-22-2018\" } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/servicefees/{bq-reference-id}/execution : Invoke an automated execute action against the ServiceFees instance
     * Apply a service fee to the account
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId ServiceFees Instance Reference (required)
     * @param body  (required)
     * @return Successful execution of ServiceFees Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke an automated execute action against the ServiceFees instance", nickname = "executeCurrentAccountFulfillmentArrangementServiceFeesUpdate", notes = "Apply a service fee to the account", response = InlineResponse2007.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "execute", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful execution of ServiceFees Instance Record", response = InlineResponse2007.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/servicefees/{bq-reference-id}/execution",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse2007> executeCurrentAccountFulfillmentArrangementServiceFeesUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "ServiceFees Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject7 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceFeesExecuteActionTaskRecord\" : \"{}\", \"serviceFeesExecuteRecordReference\" : \"SFERR796663\", \"executeResponseRecord\" : \"{}\", \"serviceFeesExecuteActionTaskReference\" : \"SFEATR723493\", \"serviceFeesInstanceRecord\" : { \"feeConfigurationProfile\" : { \"feeDefinition\" : \"feeDefinition\" }, \"feeApplicationRecord\" : { \"feeAccrualAmount\" : { \"accrualFeeType\" : \"accrualFeeType\", \"accrualFeeCharge\" : \"USD 250\" }, \"feeTransaction\" : { \"transactionFeeCharge\" : \"USD 250\", \"transactionFeeType\" : \"transactionFeeType\" }, \"feeProjectionsandCommitments\" : { \"projectedTransactionFeeType\" : \"projectedTransactionFeeType\", \"projectedTransactionFeeCharge\" : \"USD 250\" } } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/feedback : Capturing feedback against the SDCurrentAccount service that can target different levels of detail: SD/CR/BQ
     * Capturing feedback against the SDCurrentAccount service that can target different levels of detail: SD/CR/BQ
     *
     * @param sdReferenceId SDCurrentAccount Servicing Session Reference (required)
     * @param body  (required)
     * @return Successful Service Feedback (status code 200)
     */
    @ApiOperation(value = "Capturing feedback against the SDCurrentAccount service that can target different levels of detail: SD/CR/BQ", nickname = "feedbackSDCurrentAccount", notes = "Capturing feedback against the SDCurrentAccount service that can target different levels of detail: SD/CR/BQ", response = InlineResponse2001.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "feedback", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Service Feedback", response = InlineResponse2001.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/feedback",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse2001> feedbackSDCurrentAccount(@ApiParam(value = "SDCurrentAccount Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject2 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceDomainFeedbackActionTaskReference\" : \"SFATR765157\", \"serviceDomainFeedbackActionRecord\" : { \"employeeBusinessUnitReference\" : \"769031\", \"feedbackRecordStatus\" : \"feedbackRecordStatus\", \"feedbackRecordDateTime\" : \"09-22-2018\" }, \"serviceDomainFeedbackActionTaskRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/initiation : Details of a new CurrentAccountFulfillmentArrangement instance
     * Initiate A new Current Account
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param body  (required)
     * @return Successful initiation of new CurrentAccountFulfillmentArrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new CurrentAccountFulfillmentArrangement instance", nickname = "initiateCurrentAccountFulfillmentArrangement", notes = "Initiate A new Current Account", response = InlineResponse2011.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of new CurrentAccountFulfillmentArrangement instance", response = InlineResponse2011.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2011> initiateCurrentAccountFulfillmentArrangement(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject3 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"currentAccountFulfillmentArrangementInstanceReference\" : \"CAFAIR796897\", \"currentAccountFulfillmentArrangementInitiateActionReference\" : \"CAFAIAR775759\", \"currentAccountFulfillmentArrangementInstanceStatus\" : \"currentAccountFulfillmentArrangementInstanceStatus\", \"currentAccountFulfillmentArrangementInitiateActionRecord\" : \"{}\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"currentAccountNumber\" : \"currentAccountNumber\", \"productInstanceReference\" : \"720007\", \"restrictionOptionSetting\" : \"restrictionOptionSetting\", \"dateType\" : { \"date\" : \"09-22-2018\" }, \"entitlementOptionSetting\" : \"entitlementOptionSetting\", \"restrictionOptionDefinition\" : \"restrictionOptionDefinition\", \"positionLimits\" : { \"positionLimitSettings\" : \"positionLimitSettings\", \"positionLimitType\" : \"positionLimitType\", \"positionLimitValue\" : \"positionLimitValue\" }, \"accountCurrency\" : \"USD\", \"entitlementOptionDefinition\" : \"entitlementOptionDefinition\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/initiation : Details of a new AccountLien instance
     * Set up an account lien
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful initiation of Current Account Fulfillment Arrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new AccountLien instance", nickname = "initiateCurrentAccountFulfillmentArrangementAccountLien", notes = "Set up an account lien", response = InlineResponse2013.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of Current Account Fulfillment Arrangement instance", response = InlineResponse2013.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2013> initiateCurrentAccountFulfillmentArrangementAccountLien(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject8 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountLienInitiateActionReference\" : \"ALIAR756064\", \"accountLienInitiateActionRecord\" : \"{}\", \"accountLienInstanceStatus\" : \"accountLienInstanceStatus\", \"accountLienInstanceRecord\" : { \"lienDefinition\" : \"lienDefinition\" }, \"accountLienInstanceReference\" : \"ALIR758025\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"dateType\" : { \"date\" : \"09-22-2018\" }, \"restrictionOptionDefinition\" : \"restrictionOptionDefinition\", \"positionLimits\" : { \"positionLimitSettings\" : \"positionLimitSettings\", \"positionLimitValue\" : \"positionLimitValue\" }, \"linkedAccounts\" : { \"accountDetails\" : \"accountDetails\", \"linkType\" : \"linkType\" }, \"entitlementOptionDefinition\" : \"entitlementOptionDefinition\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/initiation : Details of a new AccountSweep instance
     * Set up an account sweep
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful initiation of Current Account Fulfillment Arrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new AccountSweep instance", nickname = "initiateCurrentAccountFulfillmentArrangementAccountSweep", notes = "Set up an account sweep", response = InlineResponse2014.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of Current Account Fulfillment Arrangement instance", response = InlineResponse2014.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2014> initiateCurrentAccountFulfillmentArrangementAccountSweep(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject11 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountSweepInstanceRecord\" : { \"accountSweepDefinition\" : \"accountSweepDefinition\", \"accountSweepApplicationSchedule\" : \"accountSweepApplicationSchedule\" }, \"accountSweepInstanceReference\" : \"ASIR701969\", \"accountSweepInitiateActionRecord\" : \"{}\", \"accountSweepInstanceStatus\" : \"accountSweepInstanceStatus\", \"accountSweepInitiateActionReference\" : \"ASIAR795191\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"dateType\" : { \"date\" : \"09-22-2018\" } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/initiation : Details of a new DepositsAndWithdrawals instance
     * Initialize deposit or withdrawal transaction
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful initiation of Current Account Fulfillment Arrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new DepositsAndWithdrawals instance", nickname = "initiateCurrentAccountFulfillmentArrangementDepositsAndWithdrawals", notes = "Initialize deposit or withdrawal transaction", response = InlineResponse2015.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of Current Account Fulfillment Arrangement instance", response = InlineResponse2015.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2015> initiateCurrentAccountFulfillmentArrangementDepositsAndWithdrawals(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject14 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"depositsAndWithdrawalsInstanceReference\" : \"DAWIR751696\", \"depositsAndWithdrawalsInitiateActionRecord\" : \"{}\", \"depositsAndWithdrawalsInstanceStatus\" : \"depositsAndWithdrawalsInstanceStatus\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"dateType\" : { \"date\" : \"09-22-2018\" }, \"positionLimits\" : { \"positionLimitValue\" : \"positionLimitValue\" } }, \"depositsAndWithdrawalsInitiateActionReference\" : \"DAWIAR707121\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/initiation : Details of a new IssuedDevice instance
     * Initiate the provision of issued inventory for the account (include initial issuance)
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful initiation of Current Account Fulfillment Arrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new IssuedDevice instance", nickname = "initiateCurrentAccountFulfillmentArrangementIssuedDevice", notes = "Initiate the provision of issued inventory for the account (include initial issuance)", response = InlineResponse2017.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of Current Account Fulfillment Arrangement instance", response = InlineResponse2017.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2017> initiateCurrentAccountFulfillmentArrangementIssuedDevice(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject21 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"issuedDeviceInstanceReference\" : \"IDIR761167\", \"issuedDeviceInitiateActionReference\" : \"IDIAR795368\", \"issuedDeviceInstanceStatus\" : \"issuedDeviceInstanceStatus\", \"issuedDeviceInstanceRecord\" : { \"issuedDeviceProperty\" : { \"issuedDeviceStatus\" : \"issuedDeviceStatus\", \"issuedDevicePropertyType\" : { \"issuedDevicePropertyValue\" : \"issuedDevicePropertyValue\" } }, \"issuedDeviceDescription\" : \"issuedDeviceDescription\", \"issuedDeviceOptionSetting\" : \"issuedDeviceOptionSetting\", \"issuedDeviceOptionDefinition\" : \"issuedDeviceOptionDefinition\" }, \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"associations\" : { \"associationReference\" : \"754623\", \"associationType\" : \"associationType\", \"associationObligationEntitlement\" : \"associationObligationEntitlement\" }, \"dateType\" : { \"date\" : \"09-22-2018\" }, \"positionLimits\" : { \"positionLimitSettings\" : \"positionLimitSettings\" } }, \"issuedDeviceInitiateActionRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/initiation : Details of a new Payments instance
     * Initialize a payment transaction (can be single or repeating)
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful initiation of Current Account Fulfillment Arrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new Payments instance", nickname = "initiateCurrentAccountFulfillmentArrangementPayments", notes = "Initialize a payment transaction (can be single or repeating)", response = InlineResponse2016.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of Current Account Fulfillment Arrangement instance", response = InlineResponse2016.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2016> initiateCurrentAccountFulfillmentArrangementPayments(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject17 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"paymentsInstanceReference\" : \"PIR701681\", \"paymentsInstanceStatus\" : \"paymentsInstanceStatus\", \"paymentsInstanceRecord\" : { \"paymentDefinition\" : \"paymentDefinition\", \"paymentProcessingOptionDefinition\" : \"paymentProcessingOptionDefinition\" }, \"paymentsInitiateActionReference\" : \"PIAR742876\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"associations\" : { \"associationReference\" : \"762185\", \"associationType\" : \"associationType\", \"associationObligationEntitlement\" : \"associationObligationEntitlement\" }, \"taxReference\" : \"773384\", \"dateType\" : { \"date\" : \"09-22-2018\" }, \"positionLimits\" : { \"positionLimitSettings\" : \"positionLimitSettings\" } }, \"paymentsInitiateActionRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/servicefees/initiation : Details of a new ServiceFees instance
     * Initiate service fees against an account
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successful initiation of Current Account Fulfillment Arrangement instance (status code 201)
     */
    @ApiOperation(value = "Details of a new ServiceFees instance", nickname = "initiateCurrentAccountFulfillmentArrangementServiceFees", notes = "Initiate service fees against an account", response = InlineResponse2012.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "initiate", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Successful initiation of Current Account Fulfillment Arrangement instance", response = InlineResponse2012.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/servicefees/initiation",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<InlineResponse2012> initiateCurrentAccountFulfillmentArrangementServiceFees(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject6 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceFeesInitiateActionRecord\" : \"{}\", \"serviceFeesInitiateActionReference\" : \"SFIAR773977\", \"serviceFeesInstanceStatus\" : \"serviceFeesInstanceStatus\", \"serviceFeesInstanceReference\" : \"SFIR709538\", \"serviceFeesInstanceRecord\" : { \"feeConfigurationProfile\" : { \"feeDefinition\" : \"feeDefinition\" } }, \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"dateType\" : { \"date\" : \"09-22-2018\" } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/{bq-reference-id}/requisition : Invoke a service request action against the IssuedDevice instance
     * Request changes or replacement device/inventory
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId IssuedDevice Instance Reference (required)
     * @param body  (required)
     * @return Successful requisition of IssuedDevice Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a service request action against the IssuedDevice instance", nickname = "requestCurrentAccountFulfillmentArrangementIssuedDeviceUpdate", notes = "Request changes or replacement device/inventory", response = InlineResponse20023.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "request", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful requisition of IssuedDevice Instance Record", response = InlineResponse20023.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/{bq-reference-id}/requisition",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20023> requestCurrentAccountFulfillmentArrangementIssuedDeviceUpdate(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "IssuedDevice Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject23 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"issuedDeviceRequestActionTaskReference\" : \"IDRATR746136\", \"issuedDeviceInstanceRecord\" : { \"issuedDeviceProperty\" : { \"issuedDeviceStatus\" : \"issuedDeviceStatus\", \"issuedDevicePropertyType\" : { \"issuedDevicePropertyValue\" : \"issuedDevicePropertyValue\" } }, \"issuedDeviceDescription\" : \"issuedDeviceDescription\", \"issuedDeviceOptionSetting\" : \"issuedDeviceOptionSetting\", \"issuedDeviceOptionDefinition\" : \"issuedDeviceOptionDefinition\" }, \"issuedDeviceRequestRecordReference\" : \"IDRRR766849\", \"issuedDeviceRequestActionTaskRecord\" : \"{}\", \"requestResponseRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id} : Invoke a reporting action to obtain a Current Account Fulfillment Arrangement instance related report
     * Retrieve information about a current account - either standard canned reports or selected instance attribute values
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/CRCurrentAccountFulfillmentArrangementRetrieveInputModel&#39; (optional)
     * @return Successfully Retrieved Current Account Fulfillment Arrangement Instance (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a Current Account Fulfillment Arrangement instance related report", nickname = "retrieveCurrentAccount", notes = "Retrieve information about a current account - either standard canned reports or selected instance attribute values", response = InlineResponse2005.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Retrieved Current Account Fulfillment Arrangement Instance", response = InlineResponse2005.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2005> retrieveCurrentAccount(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Query params from schema '#/definitions/CRCurrentAccountFulfillmentArrangementRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"currentAccountFulfillmentArrangementRetrieveActionResponse\" : \"currentAccountFulfillmentArrangementRetrieveActionResponse\", \"currentAccountFulfillmentArrangementInstanceAnalysis\" : { \"currentAccountFulfillmentArrangementInstanceAnalysisData\" : \"currentAccountFulfillmentArrangementInstanceAnalysisData\", \"currentAccountFulfillmentArrangementInstanceAnalysisReport\" : \"{}\", \"currentAccountFulfillmentArrangementInstanceAnalysisReportType\" : \"currentAccountFulfillmentArrangementInstanceAnalysisReportType\" }, \"currentAccountFulfillmentArrangementInstanceReportRecord\" : { \"currentAccountFulfillmentArrangementInstanceReportType\" : \"currentAccountFulfillmentArrangementInstanceReportType\", \"currentAccountFulfillmentArrangementInstanceReport\" : \"{}\", \"currentAccountFulfillmentArrangementInstanceReportData\" : \"currentAccountFulfillmentArrangementInstanceReportData\" }, \"currentAccountFulfillmentArrangementRetrieveActionTaskReference\" : \"CAFARATR748576\", \"currentAccountFulfillmentArrangementRetrieveActionTaskRecord\" : \"{}\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"currentAccountNumber\" : \"currentAccountNumber\", \"associations\" : { \"associationReference\" : \"716465\", \"associationType\" : \"associationType\", \"associationObligationEntitlement\" : \"associationObligationEntitlement\" }, \"taxReference\" : \"709480\", \"restrictionOptionSetting\" : \"restrictionOptionSetting\", \"restrictionOptionDefinition\" : \"restrictionOptionDefinition\", \"accountType\" : \"accountType\", \"positionLimits\" : { \"positionLimitSettings\" : \"positionLimitSettings\", \"positionLimitType\" : \"positionLimitType\", \"positionLimitValue\" : \"positionLimitValue\" }, \"accountCurrency\" : \"USD\", \"bankBranchLocationReference\" : \"718448\", \"productInstanceReference\" : \"721040\", \"dateType\" : { \"date\" : \"09-22-2018\" }, \"entitlementOptionSetting\" : \"entitlementOptionSetting\", \"customerReference\" : \"794126\", \"linkedAccounts\" : { \"accountDetails\" : \"accountDetails\", \"linkType\" : \"linkType\" }, \"entitlementOptionDefinition\" : \"entitlementOptionDefinition\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/{behavior-qualifier}/ : Retrieve Behavior Qualifier Reference Ids
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param behaviorQualifier Behavior Qualifier Name. ex- IssuedDevice (required)
     * @param collectionFilter Filter to refine the result set. ex- IssuedDevice Instance Status &#x3D; &#39;pending&#39; (optional)
     * @return Successful (status code 200)
     */
    @ApiOperation(value = "Retrieve Behavior Qualifier Reference Ids", nickname = "retrieveCurrentAccountBehaviorQualifierReferenceIds", notes = "", response = String.class, responseContainer = "List", authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful", response = String.class, responseContainer = "List") })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/{behavior-qualifier}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<String>> retrieveCurrentAccountBehaviorQualifierReferenceIds(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Behavior Qualifier Name. ex- IssuedDevice",required=true) @PathVariable("behavior-qualifier") String behaviorQualifier,@ApiParam(value = "Filter to refine the result set. ex- IssuedDevice Instance Status = 'pending'") @Valid @RequestParam(value = "collection-filter", required = false) String collectionFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ \"IssuedDeviceID1\", \"IssuedDeviceID2\" ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/current-account-fulfillment-arrangement/behavior-qualifiers/ : Retrieve BQ names
     *
     * @return Successful (status code 200)
     */
    @ApiOperation(value = "Retrieve BQ names", nickname = "retrieveCurrentAccountBehaviorQualifiers", notes = "", response = String.class, responseContainer = "List", authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful", response = String.class, responseContainer = "List") })
    @RequestMapping(value = "/current-account/current-account-fulfillment-arrangement/behavior-qualifiers/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<String>> retrieveCurrentAccountBehaviorQualifiers() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ \"Interest\", \"ServiceFees\", \"AccountLien\", \"AccountSweep\", \"DepositsandWithdrawals\", \"Payments\", \"IssuedDevice\" ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/{bq-reference-id}/ : Invoke a reporting action to obtain a AccountLien instance related report.
     * Retrieve details about an active account lien .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId AccountLien Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQAccountLienRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved AccountLien Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a AccountLien instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementAccountLien", notes = "Retrieve details about an active account lien .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse20011.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved AccountLien Instance Record", response = InlineResponse20011.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20011> retrieveCurrentAccountFulfillmentArrangementAccountLien(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "AccountLien Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQAccountLienRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountLienRetrieveActionResponse\" : \"accountLienRetrieveActionResponse\", \"accountLienRetrieveActionTaskRecord\" : \"{}\", \"accountLienInstanceRecord\" : { \"lienProcessingOption\" : \"lienProcessingOption\", \"lienRecord\" : { \"lienOriginator\" : \"lienOriginator\", \"lienStartDate\" : \"09-22-2018\", \"lienPurpose\" : \"lienPurpose\", \"lienExpiryDate\" : \"09-22-2018\", \"lienStatus\" : \"lienStatus\", \"lienAmount\" : \"USD 250\" }, \"lienType\" : \"lienType\", \"lienDefinition\" : \"lienDefinition\" }, \"accountLienInstanceAnalysis\" : { \"accountLienInstanceAnalysisReportType\" : \"accountLienInstanceAnalysisReportType\", \"accountLienInstanceAnalysisRecord\" : \"{}\", \"accountLienInstanceAnalysisReport\" : \"{}\", \"accountLienInstanceAnalysisParameters\" : \"accountLienInstanceAnalysisParameters\" }, \"accountLienInstanceReport\" : { \"accountLienInstanceReportType\" : \"accountLienInstanceReportType\", \"accountLienInstanceReport\" : \"{}\", \"accountLienInstanceReportRecord\" : \"{}\", \"accountLienInstanceReportParameters\" : \"accountLienInstanceReportParameters\" }, \"accountLienRetrieveActionTaskReference\" : \"ALRATR742030\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/{bq-reference-id}/ : Invoke a reporting action to obtain a AccountSweep instance related report.
     * Retrieve details about an active sweep facility or specific sweep transaction .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId AccountSweep Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQAccountSweepRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved AccountSweep Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a AccountSweep instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementAccountSweep", notes = "Retrieve details about an active sweep facility or specific sweep transaction .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse20014.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved AccountSweep Instance Record", response = InlineResponse20014.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20014> retrieveCurrentAccountFulfillmentArrangementAccountSweep(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "AccountSweep Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQAccountSweepRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountSweepInstanceRecord\" : { \"accountSweepType\" : \"accountSweepType\", \"accountSweepConfiguration\" : { \"sweepMandate\" : \"09-22-2018\", \"sweepProcessingSchedule\" : \"sweepProcessingSchedule\", \"targetAccount\" : \"targetAccount\" }, \"sweepApplicationRecord\" : { \"accountSweepAmount\" : \"USD 250\", \"accountSweepExecutionDate\" : \"09-22-2018\", \"accountSweepTargetAccount\" : \"accountSweepTargetAccount\" }, \"accountSweepDefinition\" : \"accountSweepDefinition\", \"accountSweepApplicationSchedule\" : \"accountSweepApplicationSchedule\" }, \"accountSweepInstanceReport\" : { \"accountSweepInstanceReportType\" : \"accountSweepInstanceReportType\", \"accountSweepInstanceReport\" : \"{}\", \"accountSweepInstanceReportParameters\" : \"accountSweepInstanceReportParameters\", \"accountSweepInstanceReportRecord\" : \"{}\" }, \"accountSweepRetrieveActionResponse\" : \"accountSweepRetrieveActionResponse\", \"accountSweepInstanceAnalysis\" : { \"accountSweepInstanceAnalysisRecord\" : \"{}\", \"accountSweepInstanceAnalysisReportType\" : \"accountSweepInstanceAnalysisReportType\", \"accountSweepInstanceAnalysisParameters\" : \"accountSweepInstanceAnalysisParameters\", \"accountSweepInstanceAnalysisReport\" : \"{}\" }, \"accountSweepRetrieveActionTaskRecord\" : \"{}\", \"accountSweepRetrieveActionTaskReference\" : \"ASRATR743355\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/{bq-reference-id}/ : Invoke a reporting action to obtain a DepositsAndWithdrawals instance related report.
     * Retrieve details about a deposit or withdrawal transaction .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId DepositsAndWithdrawals Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQDepositsAndWithdrawalsRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved DepositsAndWithdrawals Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a DepositsAndWithdrawals instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementDepositsAndWithdrawals", notes = "Retrieve details about a deposit or withdrawal transaction .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse20017.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved DepositsAndWithdrawals Instance Record", response = InlineResponse20017.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20017> retrieveCurrentAccountFulfillmentArrangementDepositsAndWithdrawals(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "DepositsAndWithdrawals Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQDepositsAndWithdrawalsRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"depositsAndWithdrawalsRetrieveActionTaskReference\" : \"DAWRATR757335\", \"depositsAndWithdrawalsRetrieveActionResponse\" : \"depositsAndWithdrawalsRetrieveActionResponse\", \"depositsAndWithdrawalsInstanceRecord\" : { \"withdrawalType\" : \"withdrawalType\", \"accountLimitBreachResponse\" : \"accountLimitBreachResponse\", \"withdrawalTransaction\" : { \"withdrawalTransactionWithdrawalType\" : \"withdrawalTransactionWithdrawalType\", \"withdrawalTransactionSourceReference\" : \"760470\", \"withdrawalTransactionAmount\" : \"USD 250\", \"withdrawalTransactionDate\" : \"09-22-2018\", \"withdrawalTransactionDescription\" : \"withdrawalTransactionDescription\" }, \"depositTransaction\" : { \"depositTransactionDescription\" : \"depositTransactionDescription\", \"depositTransactionDepositType\" : \"depositTransactionDepositType\", \"depositTransactionSourceReference\" : \"752074\", \"depositTransactionDate\" : \"09-22-2018\", \"depositTransactionAmount\" : \"USD 250\" }, \"depositType\" : \"depositType\" }, \"depositsAndWithdrawalsInstanceReport\" : { \"depositsAndWithdrawalsInstanceReportRecord\" : \"{}\", \"depositsAndWithdrawalsInstanceReportParameters\" : \"depositsAndWithdrawalsInstanceReportParameters\", \"depositsAndWithdrawalsInstanceReport\" : \"{}\", \"depositsAndWithdrawalsInstanceReportType\" : \"depositsAndWithdrawalsInstanceReportType\" }, \"depositsAndWithdrawalsRetrieveActionTaskRecord\" : \"{}\", \"depositsAndWithdrawalsInstanceAnalysis\" : { \"depositsAndWithdrawalsInstanceAnalysisParameters\" : \"depositsAndWithdrawalsInstanceAnalysisParameters\", \"depositsAndWithdrawalsInstanceAnalysisRecord\" : \"{}\", \"depositsAndWithdrawalsInstanceAnalysisReportType\" : \"depositsAndWithdrawalsInstanceAnalysisReportType\", \"depositsAndWithdrawalsInstanceAnalysisReport\" : \"{}\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/interest/{bq-reference-id}/ : Invoke a reporting action to obtain a Interest instance related report.
     * Retrieve details of an interest transaction applied internally to the account .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId Interest Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQInterestRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved Interest Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a Interest instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementInterest", notes = "Retrieve details of an interest transaction applied internally to the account .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse2006.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved Interest Instance Record", response = InlineResponse2006.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/interest/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2006> retrieveCurrentAccountFulfillmentArrangementInterest(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Interest Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQInterestRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"interestRetrieveActionResponse\" : \"interestRetrieveActionResponse\", \"interestRetrieveActionTaskReference\" : \"IRATR788250\", \"interestInstanceRecord\" : { \"interestRateConfiguration\" : { \"interestRate\" : \"interestRate\", \"interestRateType\" : \"interestRateType\" }, \"interestApplicationRecord\" : { \"interestTransaction\" : { \"transactionInterestCharge\" : \"USD 250\", \"transactionRateType\" : \"transactionRateType\", \"transactionDescription\" : \"transactionDescription\" }, \"interestAccrualAmount\" : { \"interestAccrualCharge\" : \"USD 250\", \"interestAccrualType\" : \"interestAccrualType\" } }, \"interestRateType\" : \"interestRateType\", \"interestRateApplicationSchedule\" : \"interestRateApplicationSchedule\" }, \"interestRetrieveActionTaskRecord\" : \"{}\", \"interestInstanceReport\" : { \"interestInstanceReportRecord\" : \"{}\", \"interestInstanceReportParameters\" : \"interestInstanceReportParameters\", \"interestInstanceReportType\" : \"interestInstanceReportType\", \"interestInstanceReport\" : \"{}\" }, \"interestInstanceAnalysis\" : { \"interestInstanceAnalysisRecord\" : \"{}\", \"interestInstanceAnalysisParameters\" : \"interestInstanceAnalysisParameters\", \"interestInstanceAnalysisReportType\" : \"interestInstanceAnalysisReportType\", \"interestInstanceAnalysisReport\" : \"{}\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/{bq-reference-id}/ : Invoke a reporting action to obtain a IssuedDevice instance related report.
     * Retrieve details about issued device/inventory .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId IssuedDevice Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQIssuedDeviceRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved IssuedDevice Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a IssuedDevice instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementIssuedDevice", notes = "Retrieve details about issued device/inventory .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse20024.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved IssuedDevice Instance Record", response = InlineResponse20024.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20024> retrieveCurrentAccountFulfillmentArrangementIssuedDevice(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "IssuedDevice Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQIssuedDeviceRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"issuedDeviceRetrieveActionTaskRecord\" : \"{}\", \"issuedDeviceRetrieveActionResponse\" : \"issuedDeviceRetrieveActionResponse\", \"issuedDeviceInstanceAnalysis\" : { \"issuedDeviceInstanceAnalysisReportType\" : \"issuedDeviceInstanceAnalysisReportType\", \"issuedDeviceInstanceAnalysisReport\" : \"{}\", \"issuedDeviceInstanceAnalysisRecord\" : \"{}\", \"issuedDeviceInstanceAnalysisParameters\" : \"issuedDeviceInstanceAnalysisParameters\" }, \"issuedDeviceInstanceReport\" : { \"issuedDeviceInstanceReportRecord\" : \"{}\", \"issuedDeviceInstanceReportType\" : \"issuedDeviceInstanceReportType\", \"issuedDeviceInstanceReport\" : \"{}\", \"issuedDeviceInstanceReportParameters\" : \"issuedDeviceInstanceReportParameters\" }, \"issuedDeviceInstanceRecord\" : { \"issuedDeviceProperty\" : { \"issuedDeviceStatus\" : \"issuedDeviceStatus\", \"issuedDevicePropertyType\" : { \"issuedDevicePropertyValue\" : \"issuedDevicePropertyValue\" } }, \"issuedDeviceDescription\" : \"issuedDeviceDescription\", \"issuedDeviceOptionSetting\" : \"issuedDeviceOptionSetting\", \"issuedDeviceOptionDefinition\" : \"issuedDeviceOptionDefinition\", \"issuedDeviceType\" : \"issuedDeviceType\" }, \"issuedDeviceRetrieveActionTaskReference\" : \"IDRATR709232\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/ : Invoke a reporting action to obtain a Payments instance related report.
     * Retrieve details about a payment transaction or arrangement .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId Payments Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQPaymentsRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved Payments Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a Payments instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementPayments", notes = "Retrieve details about a payment transaction or arrangement .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse20021.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved Payments Instance Record", response = InlineResponse20021.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse20021> retrieveCurrentAccountFulfillmentArrangementPayments(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Payments Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQPaymentsRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"paymentsRetrieveActionResponse\" : \"paymentsRetrieveActionResponse\", \"paymentsInstanceAnalysis\" : { \"paymentsInstanceAnalysisReport\" : \"{}\", \"paymentsInstanceAnalysisRecord\" : \"{}\", \"paymentsInstanceAnalysisParameters\" : \"paymentsInstanceAnalysisParameters\", \"paymentsInstanceAnalysisReportType\" : \"paymentsInstanceAnalysisReportType\" }, \"paymentsRetrieveActionTaskReference\" : \"PRATR758166\", \"paymentsInstanceReport\" : { \"paymentsInstanceReport\" : \"{}\", \"paymentsInstanceReportRecord\" : \"{}\", \"paymentsInstanceReportType\" : \"paymentsInstanceReportType\", \"paymentsInstanceReportParameters\" : \"paymentsInstanceReportParameters\" }, \"paymentsRetrieveActionTaskRecord\" : \"{}\", \"paymentsInstanceRecord\" : { \"paymentDefinition\" : \"paymentDefinition\", \"paymentConfiguration\" : { \"paymentSchedule\" : \"paymentSchedule\", \"directDebitMandateReference\" : { \"directDebitMandateSettings\" : \"directDebitMandateSettings\" }, \"billPayMandateReference\" : { \"billPayMandateSettings\" : \"billPayMandateSettings\" } }, \"paymentProcessingOptionDefinition\" : \"paymentProcessingOptionDefinition\", \"paymentProcessingOptionSetting\" : \"paymentProcessingOptionSetting\", \"paymentTransaction\" : { \"paymentTransactionPayeeReference\" : \"751019\", \"paymentTransactionPayeeBankReference\" : \"708784\", \"paymentTransactionFeeType\" : \"paymentTransactionFeeType\", \"paymentTransactionFeeCharge\" : \"USD 250\", \"paymentTransactionPaymentPurpose\" : \"paymentTransactionPaymentPurpose\", \"paymentTransactionStatus\" : \"paymentTransactionStatus\", \"paymentTransactionPayeeAccountReference\" : \"756265\", \"paymentTransactionType\" : \"paymentTransactionType\", \"paymentTransactionDate\" : \"09-22-2018\", \"paymentTransactionAmount\" : \"USD 250\", \"paymentTransactionPaymentMechanism\" : \"paymentTransactionPaymentMechanism\", \"paymentTransactionBankBranchLocationReference\" : \"728041\" }, \"paymentType\" : \"paymentType\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/servicefees/{bq-reference-id}/ : Invoke a reporting action to obtain a ServiceFees instance related report.
     * Retrieve information about a service fee applied to the account .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId ServiceFees Instance Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/BQServiceFeesRetrieveInputModel&#39; (optional)
     * @return Successfully  Retrieved ServiceFees Instance Record (status code 200)
     */
    @ApiOperation(value = "Invoke a reporting action to obtain a ServiceFees instance related report.", nickname = "retrieveCurrentAccountFulfillmentArrangementServiceFees", notes = "Retrieve information about a service fee applied to the account .The retrieve operation can have sub qualifiers beyond BQ level, please reffer to the model heriarchy to extend beyond BQ level into APIs retrieving sub-qualifier level information.", response = InlineResponse2008.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully  Retrieved ServiceFees Instance Record", response = InlineResponse2008.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/servicefees/{bq-reference-id}/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2008> retrieveCurrentAccountFulfillmentArrangementServiceFees(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "ServiceFees Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "Query params from schema '#/definitions/BQServiceFeesRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceFeesInstanceReport\" : { \"serviceFeesInstanceReport\" : \"{}\", \"serviceFeesInstanceReportType\" : \"serviceFeesInstanceReportType\", \"serviceFeesInstanceReportParameters\" : \"serviceFeesInstanceReportParameters\", \"serviceFeesInstanceReportRecord\" : \"{}\" }, \"serviceFeesInstanceAnalysis\" : { \"serviceFeesInstanceAnalysisReport\" : \"{}\", \"serviceFeesInstanceAnalysisParameters\" : \"serviceFeesInstanceAnalysisParameters\", \"serviceFeesInstanceAnalysisReportType\" : \"serviceFeesInstanceAnalysisReportType\", \"serviceFeesInstanceAnalysisRecord\" : \"{}\" }, \"serviceFeesRetrieveActionTaskReference\" : \"SFRATR705777\", \"serviceFeesRetrieveActionResponse\" : \"serviceFeesRetrieveActionResponse\", \"serviceFeesRetrieveActionTaskRecord\" : \"{}\", \"serviceFeesInstanceRecord\" : { \"feeConfigurationProfile\" : { \"feeDefinition\" : \"feeDefinition\", \"feeType\" : \"feeType\" }, \"feeApplicationRecord\" : { \"feeAccrualAmount\" : { \"accrualFeeType\" : \"accrualFeeType\", \"accrualFeeCharge\" : \"USD 250\" }, \"feeTransaction\" : { \"transactionFeeCharge\" : \"USD 250\", \"transactionDescription\" : \"transactionDescription\", \"transactionFeeType\" : \"transactionFeeType\" }, \"feeProjectionsandCommitments\" : { \"projectedTransactionDescription\" : \"projectedTransactionDescription\", \"projectedTransactionFeeType\" : \"projectedTransactionFeeType\", \"projectedTransactionFeeCharge\" : \"USD 250\" } } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id}/current-account-fulfillment-arrangement : Retrieve CR Ids
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param collectionFilter Filter to refine the result set. ex- CurrentAccount Instance Status&#x3D;&#39;active&#39; (optional)
     * @return Successful (status code 200)
     */
    @ApiOperation(value = "Retrieve CR Ids", nickname = "retrieveCurrentAccountReferenceIds", notes = "", response = String.class, responseContainer = "List", authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful", response = String.class, responseContainer = "List") })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<String>> retrieveCurrentAccountReferenceIds(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Filter to refine the result set. ex- CurrentAccount Instance Status='active'") @Valid @RequestParam(value = "collection-filter", required = false) String collectionFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ \"ID726464\", \"ID7264642\" ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /current-account/{sd-reference-id} : Analytical views maintained by the SDCurrentAccount service center for management reporting and analysis purposes
     * Analytical views maintained by the SDCurrentAccount service center for management reporting and analysis purposes
     *
     * @param sdReferenceId SDCurrentAccount Servicing Session Reference (required)
     * @param queryparams Query params from schema &#39;#/definitions/SDCurrentAccountRetrieveInputModel&#39; (optional)
     * @return Successful Service Retrieve (status code 200)
     */
    @ApiOperation(value = "Analytical views maintained by the SDCurrentAccount service center for management reporting and analysis purposes", nickname = "retrieveSDCurrentAccount", notes = "Analytical views maintained by the SDCurrentAccount service center for management reporting and analysis purposes", response = InlineResponse2002.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "retrieve", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Service Retrieve", response = InlineResponse2002.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<InlineResponse2002> retrieveSDCurrentAccount(@ApiParam(value = "SDCurrentAccount Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Query params from schema '#/definitions/SDCurrentAccountRetrieveInputModel'") @Valid @RequestParam(value = "queryparams", required = false) String queryparams) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"serviceDomainRetrieveActionRecord\" : { \"serviceDomainPerformanceAnalysis\" : { \"performanceAnalysisReport\" : \"{}\", \"performanceAnalysisReportType\" : \"performanceAnalysisReportType\", \"performanceAnalysisResult\" : \"performanceAnalysisResult\", \"performanceAnalysisReference\" : \"761670\" }, \"controlRecordPortfolioAnalysis\" : { \"controlRecordPortfolioAnalysisResult\" : \"controlRecordPortfolioAnalysisResult\", \"controlRecordPortfolioAnalysisReportType\" : \"controlRecordPortfolioAnalysisReportType\", \"controlRecordAnalysisReport\" : \"{}\", \"controlRecordPortfolioAnalysisReference\" : \"739764\" }, \"serviceDomainActivityAnalysis\" : { \"activityAnalysisResult\" : \"activityAnalysisResult\", \"activityAnalysisReportType\" : \"activityAnalysisReportType\", \"activityAnalysisReport\" : \"{}\", \"activityAnalysisReference\" : \"730230\" } }, \"serviceDomainRetrieveActionTaskReference\" : \"SRATR795161\", \"serviceDomainRetrieveActionResponse\" : \"serviceDomainRetrieveActionResponse\", \"serviceDomainRetrieveActionTaskRecord\" : \"{}\", \"serviceDomainOfferedService\" : { \"serviceDomainServiceReference\" : \"776158\", \"serviceDomainServiceRecord\" : { \"serviceDomainServiceDescription\" : \"serviceDomainServiceDescription\", \"serviceDomainServiceType\" : \"serviceDomainServiceType\", \"serviceDomainServiceVersion\" : \"serviceDomainServiceVersion\", \"serviceDomainServicePoliciesandGuidelines\" : { \"serviceDomainServiceEligibility\" : \"serviceDomainServiceEligibility\", \"serviceDomainServiceIntendedUses\" : \"serviceDomainServiceIntendedUses\", \"serviceDomainServicePricingandTerms\" : \"serviceDomainServicePricingandTerms\" }, \"serviceDomainServiceSchedule\" : \"serviceDomainServiceSchedule\" } } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/update : Update to any amendable fields of the CurrentAccountFulfillmentArrangement instance
     * Update properties of an active current account
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param body  (required)
     * @return Successfully Updated Current Account Fulfillment Arrangement Instance (status code 200)
     */
    @ApiOperation(value = "Update to any amendable fields of the CurrentAccountFulfillmentArrangement instance", nickname = "updateCurrentAccountFulfillmentArrangement", notes = "Update properties of an active current account", response = InlineResponse2003.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "update", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Updated Current Account Fulfillment Arrangement Instance", response = InlineResponse2003.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/update",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse2003> updateCurrentAccountFulfillmentArrangement(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject4 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"currentAccountFulfillmentArrangementUpdateActionTaskReference\" : \"CAFAUATR714145\", \"updateResponseRecord\" : \"{}\", \"currentAccountFulfillmentArrangementUpdateActionTaskRecord\" : \"{}\", \"currentAccountFulfillmentArrangementInstanceRecord\" : { \"currentAccountNumber\" : \"currentAccountNumber\", \"associations\" : { \"associationReference\" : \"773866\", \"associationType\" : \"associationType\", \"associationObligationEntitlement\" : \"associationObligationEntitlement\" }, \"taxReference\" : \"726005\", \"restrictionOptionSetting\" : \"restrictionOptionSetting\", \"restrictionOptionDefinition\" : \"restrictionOptionDefinition\", \"accountType\" : \"accountType\", \"positionLimits\" : { \"positionLimitSettings\" : \"positionLimitSettings\", \"positionLimitType\" : \"positionLimitType\", \"positionLimitValue\" : \"positionLimitValue\" }, \"accountCurrency\" : \"USD\", \"bankBranchLocationReference\" : \"736534\", \"productInstanceReference\" : \"757796\", \"dateType\" : { \"date\" : \"09-22-2018\" }, \"entitlementOptionSetting\" : \"entitlementOptionSetting\", \"customerReference\" : \"723910\", \"linkedAccounts\" : { \"accountDetails\" : \"accountDetails\", \"linkType\" : \"linkType\" }, \"entitlementOptionDefinition\" : \"entitlementOptionDefinition\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/{bq-reference-id}/update : Update to any amendable fields of the AccountLien instance
     * Update details of an existing account lien
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId AccountLien Instance Reference (required)
     * @param body  (required)
     * @return Successfully Updated AccountLien Instance (status code 200)
     */
    @ApiOperation(value = "Update to any amendable fields of the AccountLien instance", nickname = "updateCurrentAccountFulfillmentArrangementAccountLien", notes = "Update details of an existing account lien", response = InlineResponse2009.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "update", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Updated AccountLien Instance", response = InlineResponse2009.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountlien/{bq-reference-id}/update",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse2009> updateCurrentAccountFulfillmentArrangementAccountLien(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "AccountLien Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject9 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountLienInstanceRecord\" : { \"lienProcessingOption\" : \"lienProcessingOption\", \"lienRecord\" : { \"lienOriginator\" : \"lienOriginator\", \"lienStartDate\" : \"09-22-2018\", \"lienPurpose\" : \"lienPurpose\", \"lienExpiryDate\" : \"09-22-2018\", \"lienStatus\" : \"lienStatus\", \"lienAmount\" : \"USD 250\" }, \"lienType\" : \"lienType\" }, \"updateResponseRecord\" : \"{}\", \"accountLienUpdateActionTaskRecord\" : \"{}\", \"accountLienUpdateActionTaskReference\" : \"ALUATR762446\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/{bq-reference-id}/update : Update to any amendable fields of the AccountSweep instance
     * Update details of an existing account sweep
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId AccountSweep Instance Reference (required)
     * @param body  (required)
     * @return Successfully Updated AccountSweep Instance (status code 200)
     */
    @ApiOperation(value = "Update to any amendable fields of the AccountSweep instance", nickname = "updateCurrentAccountFulfillmentArrangementAccountSweep", notes = "Update details of an existing account sweep", response = InlineResponse20012.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "update", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Updated AccountSweep Instance", response = InlineResponse20012.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/accountsweep/{bq-reference-id}/update",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20012> updateCurrentAccountFulfillmentArrangementAccountSweep(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "AccountSweep Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject12 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountSweepInstanceRecord\" : { \"accountSweepType\" : \"accountSweepType\", \"accountSweepConfiguration\" : { \"sweepMandate\" : \"09-22-2018\", \"sweepProcessingSchedule\" : \"sweepProcessingSchedule\", \"targetAccount\" : \"targetAccount\" }, \"sweepApplicationRecord\" : { \"accountSweepAmount\" : \"USD 250\", \"accountSweepExecutionDate\" : \"09-22-2018\", \"accountSweepTargetAccount\" : \"accountSweepTargetAccount\" }, \"accountSweepDefinition\" : \"accountSweepDefinition\", \"accountSweepApplicationSchedule\" : \"accountSweepApplicationSchedule\" }, \"updateResponseRecord\" : \"{}\", \"accountSweepUpdateActionTaskRecord\" : \"{}\", \"accountSweepUpdateActionTaskReference\" : \"ASUATR719621\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/{bq-reference-id}/update : Update to any amendable fields of the DepositsAndWithdrawals instance
     * Update/correct a deposit or withdrawal transaction
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId DepositsAndWithdrawals Instance Reference (required)
     * @param body  (required)
     * @return Successfully Updated DepositsAndWithdrawals Instance (status code 200)
     */
    @ApiOperation(value = "Update to any amendable fields of the DepositsAndWithdrawals instance", nickname = "updateCurrentAccountFulfillmentArrangementDepositsAndWithdrawals", notes = "Update/correct a deposit or withdrawal transaction", response = InlineResponse20015.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "update", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Updated DepositsAndWithdrawals Instance", response = InlineResponse20015.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/depositsandwithdrawals/{bq-reference-id}/update",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20015> updateCurrentAccountFulfillmentArrangementDepositsAndWithdrawals(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "DepositsAndWithdrawals Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject15 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"depositsAndWithdrawalsUpdateActionTaskRecord\" : \"{}\", \"depositsAndWithdrawalsUpdateActionTaskReference\" : \"DAWUATR704705\", \"depositsAndWithdrawalsInstanceRecord\" : { \"withdrawalType\" : \"withdrawalType\", \"accountLimitBreachResponse\" : \"accountLimitBreachResponse\", \"withdrawalTransaction\" : { \"withdrawalTransactionWithdrawalType\" : \"withdrawalTransactionWithdrawalType\", \"withdrawalTransactionSourceReference\" : \"747984\", \"withdrawalTransactionAmount\" : \"USD 250\", \"withdrawalTransactionDate\" : \"09-22-2018\", \"withdrawalTransactionDescription\" : \"withdrawalTransactionDescription\" }, \"depositTransaction\" : { \"depositTransactionDescription\" : \"depositTransactionDescription\", \"depositTransactionDepositType\" : \"depositTransactionDepositType\", \"depositTransactionSourceReference\" : \"705845\", \"depositTransactionDate\" : \"09-22-2018\", \"depositTransactionAmount\" : \"USD 250\" }, \"depositType\" : \"depositType\" }, \"updateResponseRecord\" : \"{}\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/{bq-reference-id}/update : Update to any amendable fields of the IssuedDevice instance
     * Update the issued inventory details and provisioning configuration or status
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId IssuedDevice Instance Reference (required)
     * @param body  (required)
     * @return Successfully Updated IssuedDevice Instance (status code 200)
     */
    @ApiOperation(value = "Update to any amendable fields of the IssuedDevice instance", nickname = "updateCurrentAccountFulfillmentArrangementIssuedDevice", notes = "Update the issued inventory details and provisioning configuration or status", response = InlineResponse20022.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "update", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Updated IssuedDevice Instance", response = InlineResponse20022.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/issueddevice/{bq-reference-id}/update",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20022> updateCurrentAccountFulfillmentArrangementIssuedDevice(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "IssuedDevice Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject22 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"issuedDeviceUpdateActionTaskRecord\" : \"{}\", \"issuedDeviceUpdateActionTaskReference\" : \"IDUATR746906\", \"updateResponseRecord\" : \"{}\", \"issuedDeviceInstanceRecord\" : { \"issuedDeviceProperty\" : { \"issuedDeviceStatus\" : \"issuedDeviceStatus\", \"issuedDevicePropertyType\" : { \"issuedDevicePropertyValue\" : \"issuedDevicePropertyValue\" } }, \"issuedDeviceDescription\" : \"issuedDeviceDescription\", \"issuedDeviceOptionSetting\" : \"issuedDeviceOptionSetting\", \"issuedDeviceOptionDefinition\" : \"issuedDeviceOptionDefinition\", \"issuedDeviceType\" : \"issuedDeviceType\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/update : Update to any amendable fields of the Payments instance
     * Update a payment transaction configuration or specific transaction
     *
     * @param sdReferenceId Current Account Servicing Session Reference (required)
     * @param crReferenceId Current Account Fulfillment Arrangement Instance Reference (required)
     * @param bqReferenceId Payments Instance Reference (required)
     * @param body  (required)
     * @return Successfully Updated Payments Instance (status code 200)
     */
    @ApiOperation(value = "Update to any amendable fields of the Payments instance", nickname = "updateCurrentAccountFulfillmentArrangementPayments", notes = "Update a payment transaction configuration or specific transaction", response = InlineResponse20018.class, authorizations = {
        @Authorization(value = "apiKeyHeader")
    }, tags={ "update", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successfully Updated Payments Instance", response = InlineResponse20018.class) })
    @RequestMapping(value = "/current-account/{sd-reference-id}/current-account-fulfillment-arrangement/{cr-reference-id}/payments/{bq-reference-id}/update",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<InlineResponse20018> updateCurrentAccountFulfillmentArrangementPayments(@ApiParam(value = "Current Account Servicing Session Reference",required=true) @PathVariable("sd-reference-id") String sdReferenceId,@ApiParam(value = "Current Account Fulfillment Arrangement Instance Reference",required=true) @PathVariable("cr-reference-id") String crReferenceId,@ApiParam(value = "Payments Instance Reference",required=true) @PathVariable("bq-reference-id") String bqReferenceId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody InlineObject18 body) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"paymentsUpdateActionTaskReference\" : \"PUATR777033\", \"paymentsUpdateActionTaskRecord\" : \"{}\", \"updateResponseRecord\" : \"{}\", \"paymentsInstanceRecord\" : { \"paymentConfiguration\" : { \"paymentSchedule\" : \"paymentSchedule\", \"directDebitMandateReference\" : { \"directDebitMandateSettings\" : \"directDebitMandateSettings\" }, \"billPayMandateReference\" : { \"billPayMandateSettings\" : \"billPayMandateSettings\" } }, \"paymentProcessingOptionDefinition\" : \"paymentProcessingOptionDefinition\", \"paymentProcessingOptionSetting\" : \"paymentProcessingOptionSetting\", \"paymentTransaction\" : { \"paymentTransactionPayeeReference\" : \"713054\", \"paymentTransactionPayeeBankReference\" : \"775471\", \"paymentTransactionFeeType\" : \"paymentTransactionFeeType\", \"paymentTransactionFeeCharge\" : \"USD 250\", \"paymentTransactionPaymentPurpose\" : \"paymentTransactionPaymentPurpose\", \"paymentTransactionStatus\" : \"paymentTransactionStatus\", \"paymentTransactionPayeeAccountReference\" : \"736608\", \"paymentTransactionType\" : \"paymentTransactionType\", \"paymentTransactionDate\" : \"09-22-2018\", \"paymentTransactionAmount\" : \"USD 250\", \"paymentTransactionPaymentMechanism\" : \"paymentTransactionPaymentMechanism\", \"paymentTransactionBankBranchLocationReference\" : \"731251\" }, \"paymentType\" : \"paymentType\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
